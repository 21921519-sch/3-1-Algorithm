서론 :
실험 목적 - 셸 정렬과 합병 정렬의 성능 비교
실험 방법 -
(1) 합병정렬 프로그램 성능 측정(정수)
(2) 합병정렬 프로그램 성능 측정(레코드)
(3) 셸정렬 프로그램과의 성능 비교(정수, 레코드) 후 효율성 측정
실험 결과 예상 -
합병 정렬의 비교 횟수는 n*log(n)번, 이동 횟수는 2n*log(n)번이다.
시간적 복잡도는 최적, 최악, 평균에 상관없이 O(n*log(n))이다.
이것은 선형로그 형태를 의미한다.
n이 증가할 때 시간 복잡도 함수의 증가를 참고하면,
2초 일때 n=2, 8초일때 n=4, 24초일 때 n=8, 64초일 때 n=16이다.
따라서 실험 결과도 이 추이를 따라갈 것으로 예측된다.
셸 정렬의 비교 횟수와 이동 횟수는 간격 감소 비에 대해 변화한다.
시간적 복잡도는 최악일때 O(n^2), 평균일때 O(n(log(n))^2) 또는 O(n^1.5)이다.
평균일 때를 기준으로 하면 선형로그형에 2차형이 추가된 복합적 형태를 띄고 있다.
두 정렬의 시간 복잡도를 비교하면 셸 정렬의 수행 시간이 합병 정렬의 수행 시간보다 제곱만큼 많아질 것으로 예상하고 있다.
다만 레코드 정렬은 합병 정렬이 n이 기하급수적으로 많아질 수록 시간도 기하급수적으로 증가하기 때문에 효율성은 셸 정렬이 우수할 것으로 예측된다.

결과 :
(1) 합병정렬 프로그램 성능 측정(정수)
n=4000000일때 1.08초
n=8000000일때 2.41초
n=16000000일때 4.94초
n=32000000일때 10.60초
n=64000000일때 21.89초

(2) 합병정렬 프로그램 성능 측정(레코드)
n=1000000일때 1.32초
n=1100000일때 3.95초
n=1150000일때 7.16초
n=1200000일때 4.33초
n=1300000일때 8.41초
n=1400000이상은 메모리 초과로 인해 실행이 불가능하였다.

(3) 셸정렬 프로그램과의 성능 비교(정수, 레코드) 후 효율성 측정
셸정렬의 간격 감소비(gap)는 2주차에 실험 한 결과로 최고로 우수한 비율인 3으로 설정하였다.
(정수)
n : 2000000 | 4000000 | 8000000 | 16000000 | 32000000
셸 : 1.47초 | 3.11초 | 8.09초 | 16.81초 | 38.17초
합병 : 0.87초 | 1.82초 | 3.88초 | 8.05초 | 16.49초

(레코드)
n : 400000 | 800000 | 1200000 | 1600000 | 2000000
셸 : 1.16초 | 2.10초 | 2.84초 | 3.76초 | 4.50초
합병 : 0.39초 | 0.87초 | 4.81초 | (메모리 초과) | (메모리 초과)

결론 :
합병 정렬의 정수 측정값과 예측치와의 관계가 많이 차이가 났다. 배수값이 차이가 날 줄 알았으나 그렇지가 않았다.
셸 정렬과 합병 정렬의 시간이 제곱만큼 차이가 난다는 것을 예측하였는데 실제 측정값을 비교해보면 제곱은 아니더라도 2배만큼 차이가 난다는 것을 알 수 있었다.
다만 레코드 정렬 측정치는 서론에서 전술한 대로 n이 기하급수적으로 많아 질수록 셸 정렬보다 효율이 떨어지는 결과가 나왔다.
이를 토대로 일반적인 상황에서는 합병 정렬이 셸 정렬보다 효율적이라는 결론을 도달하였다.
